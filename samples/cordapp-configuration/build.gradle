apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'

dependencies {
    cordaCompile project(":core")
    cordaCompile project(":node-api")
    cordaRuntime project(path: ":node:capsule", configuration: 'runtimeArtifacts')
    cordaRuntime project(path: ":webserver:webcapsule", configuration: 'runtimeArtifacts')
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory file("$buildDir/nodes")
    nodeDefaults {
        cordapps = []
        rpcUsers = [['username': "default", 'password': "default", 'permissions': [ 'ALL' ]]]
    }
    node {
        name "O=Notary Service,L=Zurich,C=CH"
        notary = [validating : true]
        p2pPort 10002
        rpcSettings {
            port 10003
            adminPort 10004
        }
        rpcUsers = []
        extraConfig = ['h2Settings.address' : 'localhost:10005']
    }
    node {
        name "O=Bank A,L=London,C=GB"
        p2pPort 10006
        // This configures the default cordapp for this node
        projectCordapp {
            config "someStringValue=test"
        }
        rpcSettings {
            port 10007
            adminPort 10008
        }
        extraConfig = ['h2Settings.address' : 'localhost:10009']
    }
    node {
        name "O=Bank B,L=New York,C=US"
        p2pPort 10010
        // This configures the default cordapp for this node
        projectCordapp {
            config project.file("src/config.conf")
        }
        rpcSettings {
            port 10011
            adminPort 10012
        }
        extraConfig = ['h2Settings.address' : 'localhost:10013']
    }
}

cordapp {
    info {
        name "net/corda/samples/cordapp-configuration"
        vendor "Corda Open Source"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion 1
    }
}
